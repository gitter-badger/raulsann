// Generated by CoffeeScript 1.3.1
(function() {
  var log;

  log = console.log.bind(console);

  window.CanvasBrushView = Backbone.View.extend({
    className: 'bg',
    events: {
      'mouseenter': 'mouseenterEffect',
      'mousemove': 'mousemoveEffect',
      'mouseout': 'mouseoutEffect'
    },
    initialize: function() {
      var self;
      self = this;
      this.mutex = false;
      this.inside = false;
      this.canvas = this.el;
      this.canvas.clear = true;
      this.canvas.width = this.$el.parent().outerWidth(true);
      this.canvas.height = this.$el.parent().outerHeight(true);
      this.ctx = this.canvas.getContext("2d");
      this.height = this.canvas.height;
      this.width = this.canvas.width;
      return this.brush = new sketchy(this.ctx, [107, 154, 253]);
    },
    mouseenterEffect: function(e) {
      var x, y, _ref;
      this.inside = true;
      _ref = this.getPosition(e), x = _ref[0], y = _ref[1];
      return this.brush.strokeStart(x, y);
    },
    mousemoveEffect: function(e) {
      var x, y, _ref;
      _ref = this.getPosition(e), x = _ref[0], y = _ref[1];
      if (this.inside) {
        return this.brush.stroke(e.pageX, e.pageY);
      } else {
        this.inside = true;
        return this.brush.strokeStart(e.pageX, e.pageY);
      }
    },
    mouseoutEffect: function(e) {
      return this.brush.strokeEnd();
    },
    getPosition: function(e) {
      var x, y;
      if (e.pageX || e.pageY) {
        x = e.pageX;
        y = e.pageY;
      } else {
        x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
        y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
      }
      x -= this.canvas.offsetLeft;
      y -= this.canvas.offsetTop;
      return [x, y];
    }
  });

}).call(this);
